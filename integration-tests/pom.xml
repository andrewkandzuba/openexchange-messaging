<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.openexchange</groupId>
        <artifactId>openexchange-messaging</artifactId>
        <version>1.0.7-SNAPSHOT</version>
    </parent>

    <artifactId>integration-tests</artifactId>
    <version>1.0.7-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>openexchange ::: ${project.artifactId}</name>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <properties>
        <registry.server.port>8761</registry.server.port>
        <configuration.server.port>8888</configuration.server.port>
        <configuration.server.user>user</configuration.server.user>
        <configuration.server.password>changeit</configuration.server.password>
        <configuration.server.git.repo>https://github.com/andrewkandzuba/openexchange-configuration.git
        </configuration.server.git.repo>
        <rabbitmq.port>5672</rabbitmq.port>
        <rabbitmq.management.port>15672</rabbitmq.management.port>
        <mysql.user.name>dev</mysql.user.name>
        <mysql.user.password>changeit</mysql.user.password>
        <mysql.rootuser.password>root-changeit</mysql.rootuser.password>
        <mysql.port>3306</mysql.port>
        <docker.host.address>192.168.99.100</docker.host.address>
        <docker.wait.timeout>240000</docker.wait.timeout>
        <sms-producer.server.port>8085</sms-producer.server.port>
        <sms-consumer.server.port>8084</sms-consumer.server.port>
    </properties>

    <build>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                </includes>
            </resource>
            <resource>
                <filtering>true</filtering>
                <directory>src/test/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${fabric8.docker-maven-plugin.version}</version>
                <configuration>
                    <verbose>true</verbose>
                    <images>
                        <image>
                            <alias>mysql</alias>
                            <name>mysql</name>
                            <build>
                                <from>mysql:latest</from>
                                <assembly>
                                    <mode>tgz</mode>
                                    <permissions>ignore</permissions>
                                    <inline>
                                        <fileSets>
                                            <fileSet>
                                                <directory>${project.build.scriptSourceDirectory}</directory>
                                                <outputDirectory>docker-entrypoint-initdb.d</outputDirectory>
                                                <includes>
                                                    <include>init_db.sh</include>
                                                    <include>init_db.sql</include>
                                                </includes>
                                                <fileMode>755</fileMode>
                                            </fileSet>
                                        </fileSets>
                                    </inline>
                                </assembly>
                            </build>
                            <run>
                                <env>
                                    <MYSQL_USER>${mysql.user.name}</MYSQL_USER>
                                    <MYSQL_PASSWORD>${mysql.user.password}</MYSQL_PASSWORD>
                                    <MYSQL_ROOT_PASSWORD>${mysql.rootuser.password}</MYSQL_ROOT_PASSWORD>
                                </env>
                                <wait>
                                    <tcp>
                                        <ports>
                                            <port>${mysql.port}</port>
                                        </ports>
                                    </tcp>
                                    <time>${docker.wait.timeout}</time>
                                    <exec>
                                        <postStart>/maven/docker-entrypoint-initdb.d/init_db.sh
                                            ${mysql.rootuser.password}
                                        </postStart>
                                    </exec>
                                </wait>
                                <ports>
                                    <port>+mysql.host:mysql.port:${mysql.port}</port>
                                </ports>
                            </run>
                        </image>
                        <image>
                            <alias>rabbitmq</alias>
                            <name>rabbitmq:3-management</name>
                            <build>
                                <from>rabbitmq:3-management</from>
                            </build>
                            <run>
                                <ports>
                                    <port>${rabbitmq.port}:${rabbitmq.port}</port>
                                    <port>${rabbitmq.management.port}:${rabbitmq.management.port}</port>
                                </ports>
                                <wait>
                                    <http>
                                        <url>http://${docker.host.address}:${rabbitmq.management.port}</url>
                                        <method>GET</method>
                                        <status>200..399</status>
                                    </http>
                                    <time>${docker.wait.timeout}</time>
                                    <kill>1000</kill>
                                    <shutdown>500</shutdown>
                                </wait>
                            </run>
                        </image>
                        <image>
                            <alias>registry</alias>
                            <name>openexchange/registry:latest</name>
                            <build>
                                <from>openexchange/registry:latest</from>
                            </build>
                            <run>
                                <ports>
                                    <port>${registry.server.port}:${registry.server.port}</port>
                                </ports>
                                <dependsOn>
                                    <dependsOn>rabbitmq:3-management</dependsOn>
                                </dependsOn>
                                <wait>
                                    <http>
                                        <url>http://${docker.host.address}:${registry.server.port}/info</url>
                                        <method>GET</method>
                                        <status>200..399</status>
                                    </http>
                                    <time>${docker.wait.timeout}</time>
                                    <kill>1000</kill>
                                    <shutdown>500</shutdown>
                                </wait>
                            </run>
                        </image>
                        <image>
                            <alias>configserver</alias>
                            <name>openexchange/configserver:latest</name>
                            <build>
                                <from>openexchange/configserver:latest</from>
                            </build>
                            <run>
                                <ports>
                                    <port>${configuration.server.port}:${configuration.server.port}</port>
                                </ports>
                                <dependsOn>
                                    <dependsOn>%g/registry:${project.version}</dependsOn>
                                </dependsOn>
                                <wait>
                                    <http>
                                        <url>
                                            http://${configuration.server.user}:${configuration.server.password}@${docker.host.address}:${configuration.server.port}/env
                                        </url>
                                        <method>GET</method>
                                        <status>200..399</status>
                                    </http>
                                    <time>${docker.wait.timeout}</time>
                                    <kill>1000</kill>
                                    <shutdown>500</shutdown>
                                </wait>
                            </run>
                        </image>
                        <image>
                            <alias>sms-producer</alias>
                            <name>openexchange/sms-producer:latest</name>
                            <build>
                                <from>openexchange/sms-producer:latest</from>
                            </build>
                            <run>
                                <restartPolicy>
                                    <name>on-failure</name>
                                    <retry>5</retry>
                                </restartPolicy>
                                <ports>
                                    <port>${sms-producer.server.port}:${sms-producer.server.port}</port>
                                </ports>
                                <dependsOn>
                                    <dependsOn>openexchange/configserver:latest</dependsOn>
                                </dependsOn>
                                <wait>
                                    <http>
                                        <url>http://${docker.host.address}:${sms-producer.server.port}/health</url>
                                        <method>GET</method>
                                        <status>200..399</status>
                                    </http>
                                    <time>${docker.wait.timeout}</time>
                                    <kill>1000</kill>
                                    <shutdown>500</shutdown>
                                </wait>
                            </run>
                        </image>
                        <image>
                            <alias>sms-consumer</alias>
                            <name>openexchange/sms-consumer:latest</name>
                            <build>
                                <from>openexchange/sms-consumer:latest</from>
                            </build>
                            <run>
                                <restartPolicy>
                                    <name>on-failure</name>
                                    <retry>5</retry>
                                </restartPolicy>
                                <ports>
                                    <port>${sms-consumer.server.port}:${sms-consumer.server.port}</port>
                                </ports>
                                <dependsOn>
                                    <dependsOn>openexchange/configserver:latest</dependsOn>
                                </dependsOn>
                                <wait>
                                    <http>
                                        <url>http://${docker.host.address}:${sms-consumer.server.port}/health</url>
                                        <method>GET</method>
                                        <status>200..399</status>
                                    </http>
                                    <time>${docker.wait.timeout}</time>
                                    <kill>1000</kill>
                                    <shutdown>500</shutdown>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>remove</goal>
                            <goal>build</goal>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                            <goal>remove</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
