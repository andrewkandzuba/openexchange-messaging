<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.openexchange</groupId>
        <artifactId>openexchange-messaging</artifactId>
        <version>1.0.3-SNAPSHOT</version>
    </parent>

    <artifactId>integration-tests</artifactId>
    <version>1.0.3-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>openexchange ::: ${project.artifactId}</name>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                </includes>
            </resource>
            <resource>
                <filtering>true</filtering>
                <directory>src/test/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                </includes>
            </resource>
        </resources>
    </build>

    <profiles>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration combine.self="override">
                            <verbose>true</verbose>
                            <images>
                                <image>
                                    <alias>mysql</alias>
                                    <name>%g/mysql:latest</name>
                                    <build>
                                        <from>mysql:latest</from>
                                        <assembly>
                                            <mode>tgz</mode>
                                            <permissions>ignore</permissions>
                                            <inline>
                                                <fileSets>
                                                    <fileSet>
                                                        <directory>${project.build.scriptSourceDirectory}</directory>
                                                        <outputDirectory>docker-entrypoint-initdb.d</outputDirectory>
                                                        <includes>
                                                            <include>init_db.sh</include>
                                                            <include>init_db.sql</include>
                                                        </includes>
                                                        <fileMode>755</fileMode>
                                                    </fileSet>
                                                </fileSets>
                                            </inline>
                                        </assembly>
                                    </build>
                                    <run>
                                        <env>
                                            <MYSQL_USER>${mysql.user.name}</MYSQL_USER>
                                            <MYSQL_PASSWORD>${mysql.user.password}</MYSQL_PASSWORD>
                                            <MYSQL_ROOT_PASSWORD>${mysql.rootuser.password}</MYSQL_ROOT_PASSWORD>
                                        </env>
                                        <wait>
                                            <tcp>
                                                <ports>
                                                    <port>${mysql.port}</port>
                                                </ports>
                                            </tcp>
                                            <time>${docker.wait.timeout}</time>
                                            <exec>
                                                <postStart>/maven/docker-entrypoint-initdb.d/init_db.sh
                                                    ${mysql.rootuser.password}
                                                </postStart>
                                            </exec>
                                        </wait>
                                        <ports>
                                            <port>+mysql.host:mysql.port:${mysql.port}</port>
                                        </ports>
                                    </run>
                                </image>
                                <image>
                                    <alias>rabbitmq</alias>
                                    <name>rabbitmq:3-management</name>
                                    <build>
                                        <from>rabbitmq:3-management</from>
                                    </build>
                                    <run>
                                        <net>host</net>
                                        <ports>
                                            <port>${rabbitmq.port}:${rabbitmq.port}</port>
                                            <port>${rabbitmq.management.port}:${rabbitmq.management.port}</port>
                                        </ports>
                                        <wait>
                                            <http>
                                                <url>http://${docker.host.address}:${rabbitmq.management.port}</url>
                                                <method>GET</method>
                                                <status>200..399</status>
                                            </http>
                                            <time>${docker.wait.timeout}</time>
                                            <kill>1000</kill>
                                            <shutdown>500</shutdown>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <alias>registry</alias>
                                    <name>%g/registry:test</name>
                                    <build>
                                        <from>openexchange/registry:latest</from>
                                    </build>
                                    <run>
                                        <net>host</net>
                                        <ports>
                                            <port>${registry.server.port}:${registry.server.port}</port>
                                        </ports>
                                        <env>
                                            <JAVA_OPTS>${env.JAVA_OPTS} -server -ea -Xms64m -Xmx128m -XX:MaxMetaspaceSize=64m</JAVA_OPTS>
                                        </env>
                                        <dependsOn>
                                            <dependsOn>rabbitmq:3-management</dependsOn>
                                        </dependsOn>
                                        <wait>
                                            <http>
                                                <url>http://${docker.host.address}:${registry.server.port}/info</url>
                                                <method>GET</method>
                                                <status>200..399</status>
                                            </http>
                                            <time>${docker.wait.timeout}</time>
                                            <kill>1000</kill>
                                            <shutdown>500</shutdown>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <alias>configserver</alias>
                                    <name>%g/configserver:test</name>
                                    <build>
                                        <from>openexchange/configserver:latest</from>
                                    </build>
                                    <run>
                                        <net>host</net>
                                        <ports>
                                            <port>${configuration.server.port}:${configuration.server.port}</port>
                                        </ports>
                                        <env>
                                            <JAVA_OPTS>${env.JAVA_OPTS} -server -ea -Xms64m -Xmx128m -XX:MaxMetaspaceSize=64m
                                                -Dspring.cloud.config.server.git.uri=${configuration.server.git.repo}
                                                -Dsecurity.user.password=${configuration.server.password}
                                                -Deureka.instance.nonSecurePort=${configuration.server.port}
                                                -Deureka.instance.metadataMap.user=${configuration.server.user}
                                                -Deureka.instance.metadataMap.password=${configuration.server.password}
                                            </JAVA_OPTS>
                                        </env>
                                        <restartPolicy>
                                            <name>on-failure</name>
                                            <retry>5</retry>
                                        </restartPolicy>
                                        <dependsOn>
                                            <dependsOn>%g/registry:test</dependsOn>
                                        </dependsOn>
                                        <wait>
                                            <http>
                                                <url>
                                                    http://${configuration.server.user}:${configuration.server.password}@${docker.host.address}:${configuration.server.port}/env
                                                </url>
                                                <method>GET</method>
                                                <status>200..399</status>
                                            </http>
                                            <time>${docker.wait.timeout}</time>
                                            <kill>1000</kill>
                                            <shutdown>500</shutdown>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <alias>sms-producer</alias>
                                    <name>%g/sms-producer:test</name>
                                    <build>
                                        <from>openexchange/sms-producer:latest</from>
                                    </build>
                                    <run>
                                        <net>host</net>
                                        <ports>
                                            <port>${sms-producer.server.port}:${sms-producer.server.port}</port>
                                        </ports>
                                        <env>
                                            <JAVA_OPTS>${env.JAVA_OPTS} -server -ea -Xms64m -Xmx128m -XX:MaxMetaspaceSize=64m
                                                -Deureka.instance.nonSecurePort=${sms-producer.server.port}
                                                -Dopenexchange.sms.producer.job.parallelism=1
                                                -Dopenexchange.sms.producer.job.repeatIntervalTimeUnit=SECONDS
                                                -Dspring.cloud.stream.bindings.output.destination=${cloud.stream.topic}
                                            </JAVA_OPTS>
                                        </env>
                                        <restartPolicy>
                                            <name>on-failure</name>
                                            <retry>5</retry>
                                        </restartPolicy>
                                        <dependsOn>
                                            <dependsOn>%g/configserver:test</dependsOn>
                                        </dependsOn>
                                        <wait>
                                            <http>
                                                <url>http://${docker.host.address}:${sms-producer.server.port}/health</url>
                                                <method>GET</method>
                                                <status>200..399</status>
                                            </http>
                                            <time>${docker.wait.timeout}</time>
                                            <kill>1000</kill>
                                            <shutdown>500</shutdown>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <alias>sms-consumer</alias>
                                    <name>%g/sms-consumer:test</name>
                                    <build>
                                        <from>openexchange/sms-consumer:latest</from>
                                    </build>
                                    <run>
                                        <net>host</net>
                                        <ports>
                                            <port>${sms-consumer.server.port}:${sms-consumer.server.port}</port>
                                        </ports>
                                        <env>
                                            <JAVA_OPTS>${env.JAVA_OPTS} -server -ea -Xms64m -Xmx128m -XX:MaxMetaspaceSize=96m
                                                -Deureka.instance.nonSecurePort=${sms-consumer.server.port}
                                                -Dspring.datasource.driver-class-name=com.mysql.jdbc.Driver
                                                -Dspring.datasource.url=jdbc:mysql://${docker.host.address}:3306/${mysql.sms-consumer.schema}
                                                -Dspring.datasource.username=${mysql.user.name}
                                                -Dspring.datasource.password=${mysql.user.password}
                                                -Dopenexchange.sms.consumer.job.parallelism=1
                                                -Dopenexchange.sms.consumer.job.repeatIntervalTimeUnit=SECONDS
                                                -Dspring.cloud.stream.bindings.input.destination=${cloud.stream.topic}
                                                -Dspring.cloud.stream.bindings.input.group=${cloud.stream.group}
                                            </JAVA_OPTS>
                                        </env>
                                        <restartPolicy>
                                            <name>on-failure</name>
                                            <retry>5</retry>
                                        </restartPolicy>
                                        <dependsOn>
                                            <dependsOn>%g/configserver:test</dependsOn>
                                        </dependsOn>
                                        <wait>
                                            <http>
                                                <url>http://${docker.host.address}:${sms-consumer.server.port}/health</url>
                                                <method>GET</method>
                                                <status>200..399</status>
                                            </http>
                                            <time>${docker.wait.timeout}</time>
                                            <kill>1000</kill>
                                            <shutdown>500</shutdown>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>docker</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>remove</goal>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
